// Create results.html dynamically if it doesn't exist
        window.addEventListener('load', function() {
            const resultsHTML = `<!DOCTYPE html>
                                <html lang="en">
                                <head>
                                    <meta charset="UTF-8">
                                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                                    <title>Search Results - GT^Search</title>
                                    <style>
                                        * {
                                            box-sizing: border-box;
                                            margin: 0;
                                            padding: 0;
                                        }
                                        
                                        body {
                                            font-family: Arial, sans-serif;
                                        }
                                        
                                        header {
                                            padding: 20px;
                                            border-bottom: 1px solid #dfe1e5;
                                            display: flex;
                                            align-items: center;
                                        }
                                        
                                        .logo-small {
                                            font-size: 1.5rem;
                                            font-weight: 500;
                                            margin-right: 40px;
                                            text-decoration: none;
                                            color: #000;
                                        }
                                        
                                        .logo-small span {
                                            font-size: 0.8rem;
                                            vertical-align: super;
                                        }
                                        
                                        .search-container-small {
                                            flex: 1;
                                            max-width: 700px;
                                        }
                                        
                                        .search-box-small {
                                            width: 100%;
                                            display: flex;
                                            border: 1px solid #dfe1e5;
                                            border-radius: 24px;
                                            padding: 8px 14px;
                                            height: 46px;
                                        }
                                        
                                        .search-icon {
                                            color: #9aa0a6;
                                            margin-right: 10px;
                                            display: flex;
                                            align-items: center;
                                        }
                                        
                                        #search-small {
                                            flex: 1;
                                            border: none;
                                            font-size: 16px;
                                            outline: none;
                                        }
                                        
                                        main {
                                            max-width: 700px;
                                            margin: 0 auto;
                                            padding: 40px 20px;
                                        }
                                        
                                        .message {
                                            font-size: 1.5rem;
                                            color: #5f6368;
                                            text-align: center;
                                            margin-top: 100px;
                                        }
                                    </style>
                                </head>
                                <body>
                                    <header>
                                        <a href="index.html" class="logo-small">GT<span>^</span>Search</a>
                                        <div class="search-container-small">
                                            <div class="search-box-small">
                                                <div class="search-icon">üîç</div>
                                                <input type="text" id="search-small" name="search">
                                            </div>
                                        </div>
                                    </header>
                                    
                                    <main>
                                        <div class="message">Sorry, we aren't up and running yet</div>
                                    </main>
                                    
                                    <script>
                                        // Get the search query from URL parameters
                                        const urlParams = new URLSearchParams(window.location.search);
                                        const searchQuery = urlParams.get('search');
                                        
                                        // Set the search input value if a query exists
                                        if (searchQuery) {
                                            document.getElementById('search-small').value = searchQuery;
                                        }
                                    </script>
                                </body>
                                </html>`;

            // Create a Blob with the HTML content
            const blob = new Blob([resultsHTML], { type: 'text/html' });
            
            // Create an Object URL for the Blob
            const resultsUrl = URL.createObjectURL(blob);
            
            // Create an invisible link to download the file
            const link = document.createElement('a');
            link.href = resultsUrl;
            link.download = 'results.html';
            
            // Append the link to the body, click it, and remove it
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            // Clean up the Object URL
            URL.revokeObjectURL(resultsUrl);
        });


    <!-- Service worker for PWA -->
    <script>
        // This is a simple service worker that will cache the app for offline use
        const swContent = `
            const CACHE_NAME = 'gt-search-v1';
            const urlsToCache = [
                '/',
                '/index.html',
                '/results.html'
            ];

            self.addEventListener('install', function(event) {
                event.waitUntil(
                    caches.open(CACHE_NAME)
                        .then(function(cache) {
                            return cache.addAll(urlsToCache);
                        })
                );
            });

            self.addEventListener('fetch', function(event) {
                event.respondWith(
                    caches.match(event.request)
                        .then(function(response) {
                            if (response) {
                                return response;
                            }
                            return fetch(event.request);
                        })
                );
            });
        `;

        // Create a Blob with the service worker content
        const blob = new Blob([swContent], { type: 'application/javascript' });
        
        // Create an Object URL for the Blob
        const swUrl = URL.createObjectURL(blob);
        
        // Create an invisible link to download the file
        const link = document.createElement('a');
        link.href = swUrl;
        link.download = 'sw.js';
        
        // Append the link to the body, click it, and remove it
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        // Clean up the Object URL
        URL.revokeObjectURL(swUrl);
    </script>


<script>
    // Register service worker for PWA functionality
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('sw.js').then(function(registration) {
            console.log('ServiceWorker registration successful');
        }).catch(function(err) {
            console.log('ServiceWorker registration failed: ', err);
        });
    }
</script>